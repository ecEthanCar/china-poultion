---
title: "About"
format: html
editor: visual
---

```{r}
#| install-packages

library(readr)
library(dplyr)
library(magrittr)
library(hchinamap)
library(leaflet)
library(leaflet.extras)
library(haven)
library(shiny)


```

```{r}

dir <- tempdir()
download.file('https://czxb.github.io/br/chinadf.rda', file.path(dir, 'chinadf.rda'))
load(file.path(dir, 'chinadf.rda'), verbose = TRUE)

```

```{r}

provs <- read_csv("data/PROVONLY_cleaned_codes.csv")
big <- bigger_3 |>
  filter(is.na(Region))

china <- chinadf %>% 
  dplyr::filter(region == "China")
hchinamap(name = provs$Province, value = jiang$value,
           width = "100%", height = "400px",
           title = "Map of China", region = "China")

### Goal for next time: find the latitude and longitude for every county/province in for_cleaned

```

```{r}

beijing_parking_lots_2014 <- read_dta("Shared_Data/beijing-parking-lots-2014.dta")
View(beijing_parking_lots_2014)

```

```{r}
#| basic-map-all-lats-longs-clusters

prime_bigger_16 <- bigger_3 |> filter(year == 2022)

map <- leaflet() |>
  addTiles() |>
  addMarkers(
    data = prime_bigger_16,
    lng = ~Longitude,
    lat = ~Latitude,
    popup = ~paste(Province, " ,", Region),  # Popup content for each marker
    clusterOptions = markerClusterOptions()
  )

map

```

```{r}
#| heat-map-test

map_2 <- leaflet() |> 
  addTiles() |>
  addHeatmap(
    data = prime_bigger_16,
    lng = ~Longitude,
    lat = ~Latitude,
    intensity = ~`Debt Ratio(%)`
  )

map_2

```

```{f}

leaflet(bigger_3) %>%
  addProviderTiles(bigger_3$CartoDB.Positron) %>%
  addCircleMarkers(lng = ~X, lat = ~Y, stroke = FALSE, radius = 8, 
                   color = ~pal.gen(genus), fillOpacity = 0.7,
                   popup = ~leafpop::popupImage(img = palms.redux$pics,
                                       src = "local", embed = TRUE))

```
