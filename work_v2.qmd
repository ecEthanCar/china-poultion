```{r}

# Set the directory path where the files are located
folder_path_6 <- "city-level-take-two"

# List all the files in the folder
file_list_6 <- list.files(folder_path_6)

# Create an empty list to store the data from each file
data_list_6 <- list()

suppressWarnings({
# Iterate over the file list using a for loop
for (file_name in file_list_6) {
  file_path <- file.path(folder_path_6, file_name)
  # file_data <- read_xlsx(file_path, na = "NA")
  file_data <- merge(merge(merge(
    read_xlsx(file_path, sheet = 1, na = "NA"),
    read_xlsx(file_path, sheet = 2, na = "NA"), by = "Region"),
    read_xlsx(file_path, sheet = 3, na = "NA"), by = "Region"), 
    read_xlsx(file_path, sheet = 4, na = "NA"), by = "Region")
  # New column indicating year
  file_data$Province <- str_replace_all(
    str_extract(file_name, "\\((.*?)\\)"), "\\(|\\)", "") |> 
    as.character()
  file_data$year <- str_extract(file_name, "\\d{4}") |> as.numeric()
  # Converts all but Region to doubles
  data_list_6[[file_name]] <- file_data |>
    mutate(across(-c(Region, Province), as.numeric))
}
})
# Merge files
data_6 <- bind_rows(data_list_6) |>
  filter(Region != "Source: Wind") |>
  mutate(Region = trimws(Region)) |>
  mutate(Region = ifelse(Region == Province, NA, Region)) |>
  group_by(year)

# 
# providence_only |> write_csv(file = "data/E_I(2016-2022).csv")
# providence_only |> write_excel_csv(file = "data/E_I(2016-2022).xlsx")

```

```{r}

data_6$Region <- gsub(" Dist", "", data_6$Region)
data_6$Province <- gsub("Neimenggu", "Inner Mongolia", data_6$Province)
data_6$Region <- gsub("\\bBaisha\\b", "Baisha Li", data_6$Region)
data_6$Region <- gsub("tongling", "Tongling", data_6$Region)
data_6$Region <- gsub("Bose", "Baise", data_6$Region)
data_6$Region <- gsub("Changdu", "Chengdu", data_6$Region)
data_6$Region <- gsub("Changjiang", "Changjiang Li", data_6$Region)
data_6$Region <- gsub("Hulun Buir", "Hulun Beir", data_6$Region)
data_6$Region <- gsub("Ili Kazak", "Ili Kazakh", data_6$Region)
data_6$Region <- gsub("Kaixian", "Kaizhou", data_6$Region)
data_6$Region <- gsub("Zhongxian", "Zhong", data_6$Region)
data_6$Region <- gsub("Zhanjiang", "Zhangjiang", data_6$Region)
data_6$Region <- gsub("Xigaze", "Shigatse", data_6$Region)
data_6$Region <- gsub("ürümqi", "Urumqi", data_6$Region)
data_6$Region <- gsub("Lvliang", "Lüliang", data_6$Region)

data_6$Region <- gsub("Dist", "", data_6$Region)

encoded_data_6 <- merge(data_6, for_cleaned, by = c("Region", "Province"), all.x = TRUE)

na_encoded_data_6 <- encoded_data_6 |> filter(is.na(Statistical_Division_Code)) |>
  distinct(Region, Province)

good_encoded_data_6 <- encoded_data_6 |> filter(!is.na(Statistical_Division_Code)) |>
  distinct(Region, Province)

```

```{r}

# gdp <- read_csv("Shared_Data/copy-city-level-gdp - My Series.csv")
# 
# gdp_2 <- gdp |>
#   mutate(Province = gsub("CN: GDP: ", "", Province)) |>
#   mutate(Province = gsub("\\(DC\\)", "", Province)) |>
#   mutate(Industry = str_extract(Province, "^[^:]+")) |>
#   mutate(Industry = ifelse(Industry %in% c("Primary Industry",
#                                            "Secondary Industry", 
#                                            "Tertiary Industry", 
#                                            "Agriculture, Forestry, Animal Husbandry and Fishery (Incl. 
#                                            Services)",
#                                            "SI: Industry",
#                                            "SI: Construction"), 
#                            Industry, NA)) |> 
#   mutate(Province = gsub("Primary Industry: |Secondary Industry: |Tertiary Industry: |Agriculture, Forestry, Animal Husbandry and Fishery (Incl. Services): |SI: Industry : |SI: Construction : ", "", Province)) 
# 
# gdp_3 <- gdp_2 |> mutate(Province = str_extract(Province, "^[^:]+"))
#   
# 
# gdp_2
# gdp_3
# gdp_2$Industry <- str_extract(Province, "^[^:]+", gdp_2$Province)

# gdp$Province <- gsub("CN: GDP: ", "", gdp$Province)

```

```{r}

gdp <- read_csv("Shared_Data/copy2-city-level-gdp - My Series.csv")

gdp_2 <- gdp |>
  separate(Province, into = paste0("col", 1:6), sep = ":", extra = "merge") |>
  # Removes extra spaces after separation
  mutate_at(vars(c(col1, col2, col3, col4, col5, col6)), trimws) |>
  # Removes things in col4 (future Province col) not in col3 (future Industry col)
  mutate(col4 = ifelse(col4 %in% col3, col4, NA)) |>
  # Pastes Province names in col3 onto col4, them removes from col3
  mutate(col4 = ifelse(is.na(col4) & col3 %in% col4, col3, col4),
         col3 = ifelse(col3 %in% col4, NA, col3)) |> # Ask later what NA for industry should be
  rename(`GDP: Industry` = col3, Province = col4) |>
  select(!c(col1, col2, col5, col6))
  
  #mutate(col4 = ifelse(col4 %in% col3, col4, NA))
  #distinct(col3)
  
  # mutate(col3 = ifelse(col3 == "SI" & (col4 == "Industry" | col4 == "Construction"), col4, col3)) |>
  # mutate(col4 = ifelse(col4 == col3, NA, col4)) |>
  # mutate(col5 = ifelse(col4 == Region, NA, col4))

```
```{r}

pivot_gdp <- gdp_2 |>
  pivot_longer(
    cols = c(`1999`:`2020`),
    names_to = "year",
    values_to = "GDP"
  ) |>
  select(`GDP: Industry`, Province, Region, year, GDP) |>
  mutate(year = as.numeric(year),
         pct = as.numeric(GDP))

```

```{r}

# Remember: encoded_data_6 is a incomplete data set
bigger <- merge(encoded_data_6, pivot_estate_property, by = c("Region", "Province", "year"))
bigger |> write_csv(file = "data/in_progress_estate_property_debt(2016-2022).csv")

```

```{r}

bigger_2 <- merge(pivot_gdp, bigger, by = c("Region", "Province", "year"))

```

```{r}

  # file_data <- merge(merge(
  #   read_xlsx(file_path, sheet = 1, na = "NA"), 
  #   read_xlsx(file_path, sheet = 2, na = "NA"), by = "Region"), 
  #   read_xlsx(file_path, sheet = 3, na = "NA"), by = "Region")
  # New column indicating year

# 
# # Set the directory path where the files are located
# folder_path_6 <- "city-level-take-two"
# 
# # List all the files in the folder
# file_list_6 <- list.files(folder_path_6)
# 
# # Create an empty list to store the data from each file
# data_list_6 <- list()
# 
# # Iterate over the file list using a for loop
# for (file_name in file_list_6) {
#   file_path <- file.path(folder_path_6, file_name)
#   
#   # Get the names of all sheets in the Excel file
#   sheet_names <- excel_sheets(file_path)
#   
#   # Create an empty list to store the data from each sheet
#   sheet_data_list <- list()
#   
#   # Iterate over the sheet names using a nested for loop
#   for (sheet_name in sheet_names) {
#     sheet_data <- read_excel(file_path, sheet = sheet_name, na = "NA")
#     # New column indicating year
#     sheet_data$Province <- str_replace_all(
#       str_extract(file_name, "\\((.*?)\\)"), "\\(|\\)", "") |>
#       as.character()
#     sheet_data$year <- str_extract(file_name, "\\d{4}") |> as.numeric()
#     # Converts all but Region to doubles
#     sheet_data <- sheet_data |>
#       mutate(across(-c(Region, Province), as.numeric))
#     
#     # Append the sheet data to the list
#     sheet_data_list[[sheet_name]] <- sheet_data
#   }
#   
#   # Append the sheet data list to the main data list
#   data_list_6[[file_name]] <- sheet_data_list
# }
# 
# data_6 <- bind_rows(data_list_6) |>
#   filter(Region != "Source: Wind") |>
#   group_by(year)
# 
# data_6$Region <- gsub("Dist", "", data_6$Region)

```
