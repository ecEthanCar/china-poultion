---
title: "China Pollution Tidying Pt 3 (combination of Pt 1 and 2)"
subtitle: "Report"
format: pdf
---
```{r}

data_6 <- read_csv("Shared_Data/Untitled spreadsheet - data_6.csv")

data_6$Region <- gsub(" Dist", "", data_6$Region)
data_6$Province <- gsub("Neimenggu", "Inner Mongolia", data_6$Province)
data_6$Region <- gsub("\\bBaisha\\b", "Baisha Li", data_6$Region)
data_6$Region <- gsub("tongling", "Tongling", data_6$Region)
data_6$Region <- gsub("Bose", "Baise", data_6$Region)
data_6$Region <- gsub("Changdu", "Chengdu", data_6$Region)
data_6$Region <- gsub("\\bChangjiang\\b", "Changjiang Li", data_6$Region)
data_6$Region <- gsub("Hulun Buir", "Hulun Beir", data_6$Region)
data_6$Region <- gsub("Ili Kazak", "Ili Kazakh", data_6$Region)
data_6$Region <- gsub("Kaixian", "Kaizhou", data_6$Region)
data_6$Region <- gsub("Zhongxian", "Zhong", data_6$Region)
data_6$Region <- gsub("Zhanjiang", "Zhangjiang", data_6$Region)
data_6$Region <- gsub("Xigaze", "Shigatse", data_6$Region)
data_6$Region <- gsub("ürümqi", "Urumqi", data_6$Region)
data_6$Region <- gsub("Lvliang", "Lüliang", data_6$Region)
data_6$Region <- gsub("Dist", "", data_6$Region)
data_6$Region <- ifelse(
  data_6$Region == "Chengdu" & data_6$Province == "Tibet", 
  "Chamdo", 
  data_6$Region
)
data_6$Region <- gsub("Ili Kazakhhhh", "Ili Kazak", data_6$Region)
data_6$Region <- gsub("Baisha Li Li Li Li Li", "Baisha Li", data_6$Region)
data_6$Region <- gsub("Changjiang Li Li Li Li Li", "Changjiang Li", data_6$Region)
data_6$Region <- gsub("白杨市", "Baiyang", data_6$Region)
data_6$Region <- gsub("WULONG", "Wulong", data_6$Region)
data_6$Region <- gsub("Neimenggu\\(Inner Mongolia\\)", "Inner Mongolia", data_6$Region)

data_6$Region <- ifelse(data_6$Region == data_6$Province, NA, data_6$Region)
encoded_data_7 <- merge(data_6, for_cleaned, by = c("Region", "Province"), all.x = TRUE)
encoded_data_7$Region <- ifelse(is.na(encoded_data_7$Region), 
                                encoded_data_7$Province, encoded_data_7$Region)

# encoded_data_6 |> distinct(Province)

na_encoded_data_7 <- encoded_data_6 |> filter(is.na(Statistical_Division_Code)) |>
  distinct(Region, Province)
good_encoded_data_7 <- encoded_data_6 |> filter(!is.na(Statistical_Division_Code)) |>
  distinct(Region, Province)


```


```{r}

##IGNORE##

China_Latitude_and_Longitude_location <- read_csv("~/china-polution/Shared_Data/China Latitude and Longitude - location.csv")
# View(China_Latitude_and_Longitude_location)

lat_long_V2 <- read_csv(file = "Shared_Data/China Latitude and Longitude - location.csv") |>
  select(!c(Region, Region_ch, `District/County_ch`, Province_ch)) |>
  rename(Region = `District/County`) |>
  mutate(Province = str_remove_all(Province,
  paste(c(" (?i)province",
          " (?i)autonomous region",
          " (?i)autonomous prefecture",
          " (?i)uygur",
          " (?i)hui",
          " (?i)zhuang",
          " (?i)uyghur"),
        collapse = "|"))) |>
  mutate(Region = str_remove_all(Region,
  paste(c(" (?i)area",
          " (?i)league",
          " (?i)district",
          " (?i)new district",
          " (?i)county", 
          " (?i)city", 
          " (?i)administration",
          " (?i)region",
          " (?i)autonomous county",
          " (?i)autonomous region",
          " (?i)new area",
          " (?i)administrative region",
          " (?i)administrative prefecture",
          " (?i)autonomous prefecture",
          " Tibetan Qiang",
          " Li Miao",
          " Tibetan and Qiang Autonomous Prefecture",
          " Li and Miao",
          " Mongolian",
          " (?i)hui",
          " Bai",
          " Dai and Jingpo",
          " Tujia and Miao",
          " Tibetan",
          " Hani| Yi",
          "City of ",
          " Korean",
          " Dai",
          " Zhuang Miao",
          " Tujia",
          " Buyi Miao",
          " Miao and Dong",
          " Zhuang and Miao Autonomous Prefecture",
          " and"),
        collapse = "|")))

lat_long_V2$Region <- gsub("Alar", "Aral", lat_long$Region)
lat_long_V2$Region <- gsub("Baishali", "Baisha Li", lat_long$Region)
lat_long_V2$Region <- gsub("\\bZhongxian\\b", "Zhong", lat_long$Region)
lat_long_V2$Region <- gsub("Bayannuer", "Bayannur", lat_long$Region)
lat_long_V2$Region <- gsub("Wulanchabu", "Ulanqab", lat_long$Region)
lat_long_V2$Region <- gsub("West Qing", "Xiqing", lat_long$Region)
lat_long_V2$Region <- gsub("Ganzi", "Garze", lat_long$Region)
lat_long_V2$Region <- gsub("Guoluo", "Golog", lat_long$Region)

lat_long_V2 |> write_csv(file = "na_data/temporary_lat_long_V2.csv")

lat_long_encoded <- left_join(encoded_data_7, lat_long_V2, by = c("Region", "Province"))
na_location_V2 <- bigger_3 |> filter(is.na(Longitude) | is.na(Latitude)) |> distinct(Province, Region)

na_location_V2 |> write_csv(file = "na_data/temporary_lat_long_V2_na.csv")

# 
# bigger_3 <- left_join(bigger_2, lat_long, by = c("Region", "Province"))
# 
# bigger_4 <- bigger_3 |>
#   mutate(Region = ifelse(is.na(Region), Province, Region)) |> 
#   mutate(`GDP: Industry` = ifelse(is.na(`GDP: Industry`), "Total", `GDP: Industry`)) 
# 
# no_na_bigger_4 <- bigger_4 |> na.omit()
# 
# na_location <- bigger_3 |> filter(is.na(Longitude) | is.na(Latitude)) |>
#   distinct(Province, Region)
# 
# na_location |> write_csv(file = "na_data/lat_long_na.csv")

```

```{r}
#| new-lat-long

lat_long_v2_new <- read_csv("~/china-polution/Shared_Data/Lat-Long-V2 - temporary_lat_long_V2.csv")
lat_long_v2_new <- lat_long_v2_new |> mutate(Region = ifelse(is.na(Region), Province, Region))
lat_long_v2_new <- subset(lat_long_v2_new, select = -`Post Code`)

duplicates <- lat_long_v2_new[duplicated(lat_long_v2_new[c("Province","Region")]), ]

# To deal with multiple smaller areas being under the same Region,
# but have slightly different coordinates, took the average of each 
# group to triangulate the "center" of the Region. Can be changed if
# more specific coordinates are needed
lat_long_v2_without_duplicates <- lat_long_v2_new |>
  group_by(Province, Region) |>
  summarise(Latitude = mean(Latitude), Longitude = mean(Longitude))

duplicates_2 <- lat_long_v2_without_duplicates[duplicated(lat_long_v2_without_duplicates[c("Province","Region")]), ]

bigger_10 <- merge(encoded_data_7, lat_long_v2_without_duplicates, by = c("Region", "Province"))

lat_long_v2_without_duplicates |> write_csv(file = "data/lat_long_*no-duplicates*.csv")

```

```{r}
#| for-gdp-stuff

gdp <- read_csv("Shared_Data/copy2-city-level-gdp - My Series.csv")

gdp_2 <- gdp |>
  separate(Province, into = paste0("col", 1:6), sep = ":", extra = "merge") |>
  # Removes extra spaces after separation
  mutate_at(vars(c(col1, col2, col3, col4, col5, col6)), trimws) |>
  # Removes things in col4 (future Province col) not in col3 (future Industry col)
  mutate(col4 = ifelse(col4 %in% col3, col4, NA)) |>
  # Pastes Province names in col3 onto col4, them removes from col3
  mutate(col4 = ifelse(is.na(col4) & col3 %in% col4, col3, col4),
         col3 = ifelse(col3 %in% col4, NA, col3)) |> # Ask later what NA for industry should be
  rename(`GDP: Industry` = col3, Province = col4) |>
  select(!c(col1, col2, col5, col6))

pivot_gdp <- gdp_2 |>
  pivot_longer(
    cols = c(`1999`:`2020`),
    names_to = "year",
    values_to = "GDP"
  ) |>
  select(`GDP: Industry`, Province, Region, year, GDP) |>
  mutate(year = as.numeric(year),
         pct = as.numeric(GDP))

pivot_gdp_n <- pivot_gdp |>
  mutate(Region = ifelse(Region == Province, NA, Region)) |>
  mutate(`GDP: Industry` = ifelse(is.na(`GDP: Industry`), "Total", `GDP: Industry`)) |>
  subset(select = -pct)

```
```{r}
#| carbon-triangle-estate-property-separeation

Carbon_Triangle <- read_csv("Shared_Data/Carbon Triangle Copy - My Series.csv") |>
  rename(Province = Data_type)

Carbon_Triangle_2 <- Carbon_Triangle |> distinct(Unit)

names(Carbon_Triangle) <- gsub(" ", "_", names(Carbon_Triangle))

#Filtering if real estate, then removing superfluous word from Province
real_estate <- Carbon_Triangle |> 
  filter(grepl("CN: Real Estate Investment:", Province))
real_estate$Province <- gsub(".*?:.*?:(.*?):.*", "\\1", real_estate$Province)
real_estate$Province <- gsub("CN: Real Estate Investment:", "", real_estate$Province)
real_estate$Province <- trimws(real_estate$Province)

#Filtering if property, then removing superfluous word from Province
property <- Carbon_Triangle |> 
  filter(grepl("CN: Property Price: Residential:", Province))
property$Province <- gsub("CN: Property Price: Residential:", "", property$Province)
property$Province <- sub(":.*", "", property$Province)
property$Province <- trimws(property$Province)

#Renaming Subnational to Region
merge_property <- property |> select(!Region) |>
  rename(Region = Subnational)

merge_estate <- select(real_estate, !Region) |>
    rename(Region = Subnational)

#Pivot merges
pivot_property <- merge_property |>
  pivot_longer(
    cols = c(`1999`:`2021`),
    names_to = "year",
    values_to = "Annual_Real_Estate_Investment"
  ) |>
  select(Province, Region, year, Annual_Real_Estate_Investment) |>
  mutate(year = as.numeric(year),
         pct = as.numeric(Annual_Real_Estate_Investment))

pivot_estate <- merge_estate |>
  pivot_longer(
    cols = c(`1999`:`2021`),
    names_to = "year",
    values_to = "Annual_Avg_Property_Price"
  ) |>
  select(Province, Region, year, Annual_Avg_Property_Price) |>
  mutate(year = as.numeric(year),
         pct = as.numeric(Annual_Avg_Property_Price))

```

```{r}

#| pivot-year-data

pivot_property <- merge_property |>
  pivot_longer(
    cols = c(`1999`:`2021`),
    names_to = "year",
    values_to = "Annual_Real_Estate_Investment"
  ) |>
  select(Province, Region, year, Annual_Real_Estate_Investment) |>
  mutate(year = as.numeric(year),
         pct = as.numeric(Annual_Real_Estate_Investment))

pivot_estate <- merge_estate |>
  pivot_longer(
    cols = c(`1999`:`2021`),
    names_to = "year",
    values_to = "Annual_Avg_Property_Price"
  ) |>
  select(Province, Region, year, Annual_Avg_Property_Price) |>
  mutate(year = as.numeric(year),
         pct = as.numeric(Annual_Avg_Property_Price))

pivot_estate_property <- merge(pivot_property, pivot_estate, by = c("Region", "Province", "year"), all.x = TRUE) |>
  select(!c(`pct.x`, `pct.y`)) |>
  mutate(Province = gsub("\\(DC\\) ", "", Province), 
         Region = gsub("\\(DC\\) ", "", Region))

```

```{r}

ceads_city_2022 <- read_excel("Shared_Data/ceads-city-2022.xlsx")

pivot_ceads_city_2022 <- ceads_city_2022 |>
  pivot_longer(
    cols = c(`1995`:`2019`),
    names_to = "year",
    values_to = "Carbon Emissions"
  ) |>
  select(`Carbon Emissions`, CityID, ProvinceID, CityNameEn, year) |>
  mutate(year = as.numeric(year),
         CityID = as.character(CityID)) |>
  rename(`Province.Code` = ProvinceID, 
         Statistical_Division_Code = CityID,
         Region = CityNameEn) |>
  select(-Statistical_Division_Code)

```

```{r}
#| merging-things

bigger_11 <- merge(pivot_estate_property, bigger_10, by = c("Region", "Province", "year")) |> unique()

bigger_12 <- merge(pivot_gdp_n, bigger_11, by = c("Region", "Province", "year")) |> unique()

lat_long_v2_with_codes <- bigger_10 |>
  select(Region, Province, Statistical_Division_Code, Province.Code, Latitude, Longitude) |> unique()

emission <- merge(pivot_ceads_city_2022, lat_long_v2_with_codes, by = c("Region", "Province.Code")) |> unique()

bigger_12 |> write_csv(file = "data/debt_estate_property_pivot_gdp_statcodes_lat_long.csv")

emission |> write_csv(file = "data/emissions_lat_long.csv")

```



```{r}
#| shrinking-cities-with-ids

library(haven)
shrinking_map <- read_dta("Shared_Data/joined-layer-shrinking-map.dta")

shrinking_map <- shrinking_map |>
  rename(Region = adm2_en) |>
  rename(Province = adm1_en) |>
  mutate(Province = str_remove_all(Province,
    paste(c(" (?i)province",
            " (?i)autonomous region",
            " (?i)autonomous prefecture",
            " (?i)uygur",
            " (?i)hui",
            " (?i)zhuang",
            " (?i)municipality"),
          collapse = "|")))

shrinking_map$Region <- gsub("Dist", "", shrinking_map$Region)
shrinking_map$Region <- gsub("\\(Inner Mongolia", "", shrinking_map$Region)
shrinking_map$Region <- gsub("WULONG", "Wulong", shrinking_map$Region)
shrinking_map$Region <- gsub("Neimenggu\\)", "Neimenggu", shrinking_map$Region)
shrinking_map$Province <- gsub("\\(Inner Mongolia", "", shrinking_map$Province)
shrinking_map$Province <- gsub("Neimenggu", "Inner Mongolia", shrinking_map$Province)
shrinking_map$Region <- gsub("\\bBaisha\\b", "Baisha Li", shrinking_map$Region)
shrinking_map$Region <- gsub("tongling", "Tongling", shrinking_map$Region)
shrinking_map$Region <- gsub("Bose", "Baise", shrinking_map$Region)
shrinking_map$Region <- gsub("Changdu", "Chengdu", shrinking_map$Region)
shrinking_map$Region <- gsub("Changjiang", "Changjiang Li", shrinking_map$Region)
shrinking_map$Region <- gsub("Hulun Buir", "Hulun Beir", shrinking_map$Region)
shrinking_map$Region <- gsub("Ili Kazak", "Ili Kazakh", shrinking_map$Region)
shrinking_map$Region <- gsub("Kaixian", "Kaizhou", shrinking_map$Region)
shrinking_map$Region <- gsub("Zhongxian", "Zhong", shrinking_map$Region)
shrinking_map$Region <- gsub("Zhanjiang", "Zhangjiang", shrinking_map$Region)
shrinking_map$Region <- gsub("Xigaze", "Shigatse", shrinking_map$Region)
shrinking_map$Region <- gsub("ürümqi", "Urumqi", shrinking_map$Region)
shrinking_map$Region <- gsub("Lvliang", "Lüliang", shrinking_map$Region)
shrinking_map$Region <- ifelse(
  shrinking_map$Region == "Chengdu" & shrinking_map$Province == "Tibet", 
  "Chamdo", 
  shrinking_map$Region
)

shrinking_map_wid <- merge(shrinking_map, for_cleaned, by = c("Region", "Province"))

```

```{r}
#| local-government-funds-total-tidying

province_cleaned <- for_cleaned |>
  distinct(Province, Province.Code) |>
  na.omit()

jiangsu_funds <- read_csv("Shared_Data/Jiangsu Revenue of Local Government Funds Total - China_ Jiangsu_ Revenue of Loca.csv") |>
  pivot_longer(
    cols = c(`2006`:`2022`),
    names_to = "year",
  ) |>
  separate(Name, into = paste0("col", 1:4), sep = ":", extra = "merge") |>
  mutate_at(vars(c(col1, col2, col3, col4)), trimws) |>
  rename(Province = col2, Country = col1, Type = col3, Amount = col4)

provcodes_jiangsu_funds <- merge(jiangsu_funds, province_cleaned, by = c("Province"))

province_cleaned |> write_csv(file = "data/PROVONLY_cleaned_codes.csv")
provcodes_jiangsu_funds |> write_csv(file = "data/jiangsu_funds(2006-2022).csv")

```

```{r}
#| emissions-draft-file

ceads_city_2022 <- read_excel("Shared_Data/ceads-city-2022.xlsx")

### Definitely make a dataset to check if there are non-matching locations just because of the string.

pivot_ceads_city_2022 <- ceads_city_2022 |>
  pivot_longer(
    cols = c(`1995`:`2019`),
    names_to = "year",
    values_to = "Carbon Emissions"
  ) |>
  select(`Carbon Emissions`, CityID, ProvinceID, CityNameEn, year) |>
  mutate(year = as.numeric(year),
         CityID = as.character(CityID)) |>
  rename(`Province.Code` = ProvinceID, 
         Statistical_Division_Code = CityID,
         Region = CityNameEn)

bigger_n <- bigger |> mutate(Region = ifelse(is.na(Region), Province, Region))

# smaller <- left_join(pivot_ceads_city_2022, pivot_estate_property, by = c("year", "Region")) |>
#   filter(year <= 2019, !is.na(`Carbon Emissions`))

smaller <- left_join(pivot_ceads_city_2022, bigger_n, by = c("year", "Region", "Statistical_Division_Code", "Province.Code"))
smaller <- left_join(smaller, lat_long_2, by = c("Region", "Statistical_Division_Code", "Province.Code"))
colnames(smaller) <- gsub("（Special Bond）", " (Special Bond)", colnames(smaller))

smaller_2 <- filter(smaller, year >= 2016, year <= 2019)
  
smaller_lat_long_na <- smaller_2 |> 
  filter(is.na(Latitude) | is.na(Longitude)) |> 
  distinct(Province.Code, Region)

smaller_gdp_data_na <- smaller_2 |>
  filter(
    is.na(`Debt Ratio(%)`),
    is.na(`Wide Range Debt Ratio(%)`),
    is.na(`Debt Asset Ratio(%)`),
    is.na(`Wide Range Debt Asset Ratio(%)`),
    is.na(`Balance of Municipal Bonds(CNY,B)`),
    is.na(`Limitation of Municipal Bonds(CNY,B)`),
    is.na(`Fiscal Self-sufficiency(%)`),
    is.na(`GDP(CNY,B)`),
    is.na(`Growth Rate of GDP(%)`),
    is.na(`Per capita GDP(CNY)`),
    is.na(`Fixed Asset Investment(CNY,B)`),
    is.na(`Total Value of Imports and Exports(CNY,B)`),
    is.na(`Per Capita Disposable Income(CNY)`),
    is.na(`Industrial Increase Volume(CNY,B)`),
    is.na(`Budget Revenue(CNY,B)`),
    is.na(`Budget Expenditure(CNY,B)`),
    is.na(`Tax Revenue(CNY,B)`),
    is.na(`Share of Tax Revenue(%)`),
    is.na(`Revenue of Government-Managed Funds(CNY,B)`),
    is.na(`Expenditure of Government-Managed Funds(CNY,B)`),
    is.na(`Issuance（LGFV Bond）(CNY,B)`),
    is.na(`Net Financing（LGFV Bond）(CNY,B)`),
    is.na(`Issuance（Non-Standard Financing）(CNY,B)`),
    is.na(`Net Financing（Non-Standard Financing）(CNY,B)`),
    is.na(`Issuance(General Bond)(CNY,B)`),
    is.na(`Net Financing(General Bond)(CNY,B)`),
    is.na(`Issuance (Special Bond)(CNY,B)`),
    is.na(`Net Financing (Special Bond)(CNY,B)`)
  ) |> 
  distinct(Province.Code, Region)

smaller_estate_prop_data_na <- smaller_2 |>
  filter(
    is.na(Annual_Real_Estate_Investment),
    is.na(Annual_Avg_Property_Price)
    ) |> 
  distinct(Province.Code, Region)

smaller_2 |> write_csv(file = "data/carbon_emissions_est_prop_gdp_(2016-2019).csv")
smaller_gdp_data_na |> write_csv(file = "na_data/smaller_gdp_data_na.csv")
smaller_lat_long_na |> write_csv(file = "na_data/smaller_lat_long_na")

```
